---
import GlobalStyles from '../components/GlobalStyles.astro';
import { ViewTransitions } from 'astro:transitions';
interface Props {
	title: string;
}

const { title } = Astro.props;
---
<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width,initial-scale=1.0">
    <title>{title}</title>
    <script>
      //- Fix dark mode flashing
      (function() {
        try {
          var mode = localStorage.getItem('theme-mode');
          var isDark = mode === 'dark' || (!mode && window.matchMedia('(prefers-color-scheme: dark)').matches);
          if (isDark) {
            document.documentElement.classList.add('dark');
          }
        } catch (e) {}
      })();
    </script>
    <!-- Favicons -->
    <link rel="icon" href="/favicon_io/favicon.ico">
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon_io/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon_io/favicon-16x16.png">
    <link rel="icon" type="image/png" sizes="192x192" href="/favicon_io/android-chrome-192x192.png">
    <link rel="icon" type="image/png" sizes="512x512" href="/favicon_io/android-chrome-512x512.png">
    <link rel="apple-touch-icon" href="/favicon_io/apple-touch-icon.png">
    <link rel="manifest" href="/favicon_io/site.webmanifest">
    <!-- Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100..900;1,100..900&display=swap" rel="stylesheet">
    <GlobalStyles />
    <ViewTransitions />
</head>
<body>
    <slot />
    <script>
        import i18next from 'i18next';
        import i18nextHttpBackend from 'i18next-http-backend';
        import i18nextBrowserLanguageDetector from 'i18next-browser-languagedetector';

        const updateUI = () => {
            const path = window.location.pathname;
            const titleKey = path.includes('/lab') ? 'title' : 'home_title';
            document.title = i18next.t(titleKey);

            document.documentElement.lang = i18next.language.startsWith('zh') ? 'zh-CN' : 'en';

            document.querySelectorAll('[data-i18n]').forEach(el => {
                const key = el.getAttribute('data-i18n');
                if (key) {
                    const translatedText = i18next.t(key);
                    if (translatedText !== key) el.textContent = translatedText;
                }
            });

            document.querySelectorAll('[data-i18n-title]').forEach(el => {
                const key = el.getAttribute('data-i18n-title');
                if (key) {
                    const translatedText = i18next.t(key);
                    if (translatedText !== key) el.setAttribute('title', translatedText);
                }
            });
        };

        const handleLangClick = () => {
            const newLang = i18next.language.startsWith('zh') ? 'en' : 'zh';
            i18next.changeLanguage(newLang);
        };

        const setupI18n = () => {
            if (!i18next.isInitialized) {
                i18next
                    .use(i18nextHttpBackend)
                    .use(i18nextBrowserLanguageDetector)
                    .init({
                        fallbackLng: 'en',
                        load: 'languageOnly',
                        debug: false,
                        backend: { loadPath: '/locales/{{lng}}.json' },
                        detection: { caches: ['cookie', 'localStorage'] },
                    }, (err) => {
                        if (err) return console.error('i18next init failed:', err);
                        i18next.on('languageChanged', updateUI);
                        updateUI();
                    });
            } else {
                updateUI();
            }

            // Attach listeners to whichever button is present
            const langBtn = document.getElementById('langToggleBtn');
            const labLangBtn = document.getElementById('labLangToggleBtn');
            if (langBtn) langBtn.addEventListener('click', handleLangClick);
            if (labLangBtn) labLangBtn.addEventListener('click', handleLangClick);
        };

        document.addEventListener('astro:page-load', setupI18n);
        setupI18n();
    </script>
</body>
</html>